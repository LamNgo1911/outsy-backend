name: CI/CD pipeline

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
        # 1. Checkout repo
        - name: Checkout repo
          uses: actions/checkout@v5

        # 2. Setup Node.js
        - name: Install Node.js
          uses: actions/setup-node@v5
          with: 
            node-version: 22
        
        # 3. Install dependencies
        - name: Install dependencies
          run: npm ci

        # 4. Log in to Docker Hub
        - name: Log in to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}

        # 5. Build and push docker image to Docker Hub
        - name: Build and push docker image
          run: |
            docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/outsy:${{ github.sha }} .
            docker tag ${{ secrets.DOCKERHUB_USERNAME }}/outsy:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/outsy:latest
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/outsy:${{ github.sha }}
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/outsy:latest

        - name: Deploy to EC2
          uses: appleboy/ssh-action@v0.1.6
          with:
            host: ${{ secrets.EC2_HOST }}
            username: ${{ secrets.EC2_USER }}
            key: ${{ secrets.EC2_SSH_KEY }}
            script: |
              docker pull ${{ secrets.DOCKERHUB_USERNAME }}/outsy:latest
              docker stop outsy || true
              docker rm outsy || true
              docker run -d --name outsy -p 8000:8000 \
              -e JWT_ACCESS_SECRET=${{ secrets.JWT_ACCESS_SECRET }} \
              -e JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }} \
              -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
              myusername/outsy:latest



